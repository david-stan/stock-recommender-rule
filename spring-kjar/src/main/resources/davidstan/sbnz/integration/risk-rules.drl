package davidstan.sbnz.integration;

import davidstan.sbnz.integration.facts.Stocks;
import davidstan.sbnz.integration.facts.Risk;
import davidstan.sbnz.integration.models.Sector;
import davidstan.sbnz.integration.models.RiskGroup;

agenda-group "risk"

rule "High risk"
    when
        $risk: Risk(riskGroup == RiskGroup.NA, score <= 10)
    then
    	System.out.println("High risk");
    	modify($risk) { setRiskGroup(RiskGroup.HIGH_RISK) }
end

rule "Medium risk"
    when
        $risk: Risk(riskGroup == RiskGroup.NA, 10 < score && score < 100)
    then
    	System.out.println("Medium risk");
    	modify($risk) { setRiskGroup(RiskGroup.MEDIUM_RISK) }
end

rule "Low risk"
    when
        $risk: Risk(riskGroup == RiskGroup.NA, 100 <= score )
    then
    	System.out.println("Low risk");
    	modify($risk) { setRiskGroup(RiskGroup.LOW_RISK) }
end

rule "Thresh high"
	when
		$risk: Risk(riskGroup == RiskGroup.HIGH_RISK, threshold == 0, $attr: riskAssessments)
		Number($count: intValue >= 0) from accumulate(
			Profiles($p: this) from $attr,
			count($p)
		)
	then
		modify($risk) { setThreshold(3*(1+0.1*$count)) }
end

rule "Thresh medium"
	when
		$risk: Risk(riskGroup == RiskGroup.MEDIUM_RISK, threshold == 0, $attr: riskAssessments)
		Number($count: intValue >= 0) from accumulate(
			Profiles($p: this) from $attr,
			count($p)
		)
	then
		modify($risk) { setThreshold(5*(1+0.1*$count)) }
end

rule "Thresh low"
	when
		$risk: Risk(riskGroup == RiskGroup.LOW_RISK, threshold == 0, $attr: riskAssessments)
		Number($count: intValue >= 0) from accumulate(
			Profiles($p: this) from $attr,
			count($p)
		)
	then
		modify($risk) { setThreshold(7*(1+0.1*$count)) }
end

rule "Process stocks"
	when
		$risk: Risk(riskGroup != RiskGroup.NA, threshold != 0)
	then
		$risk.processStocks();
end
